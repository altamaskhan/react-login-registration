{"version":3,"sources":["Header.js","Login.js","Singup.js","Home.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","type","id","Login","useForm","register","handleSubmit","errors","formState","onSubmit","data","email","password","alert","window","location","console","log","name","required","pattern","placeholder","minLength","maxLength","Signup","localStorage","setItem","JSON","stringify","username","number","Home","App","exact","path","component","Singup","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.415ae14b.chunk.js","sourcesContent":["import React,{Link} from 'react-router-dom'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            \r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n          <div className=\"container-fluid\">\r\n            <Link className=\"navbar-brand\" to=\"/\">TASK</Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span className=\"navbar-toggler-icon\" />\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" className=\"float-right\">\r\n              <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                  <Link className=\"nav-link active \" to=\"signup\">Signup</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link className=\"nav-link active\" to=\"/login\">Login</Link>\r\n                </li>\r\n                \r\n               \r\n              </ul>\r\n              \r\n            </div>\r\n          </div>\r\n        </nav>\r\n        \r\n                </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n","import React, { useState } from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nfunction Login() {\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n    const onSubmit = (data) =>{\r\n        if (data.email == \"alam@gmail.com\" && data.password==\"alam\"){\r\n           \r\n            alert(\"Successfully Loged in!\");\r\n            window.location = '/';\r\n           \r\n          }\r\n          else {\r\n            alert(\"login fail!\");\r\n          }\r\n        \r\n        console.log(data);\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            \r\n            <div className=\"col-sm-4 offset-sm-4 mt-5\">\r\n                <div className=\"card shadow\">\r\n                    <div className=\"container\">\r\n\r\n                        <h1 className=\"text-center text-primary\">Login</h1><br />\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <p className=\"text-danger\">\r\n                               {errors.email?.type === 'required' && \"email is required\"}\r\n                               \r\n                               {errors.email?.type === 'pattern' && \"invalid email\"}\r\n                               \r\n                           </p>\r\n\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"email\"\r\n                                {...register('email', { required: true, pattern:/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+/, })}\r\n                                placeholder=\"enter email id \"\r\n                                type=\"text\"\r\n                                \r\n                                \r\n                            />\r\n                            <br />\r\n                            \r\n                            <p className=\"text-danger\">\r\n                               {errors.password?.type === 'required' && \"password is required\"}\r\n                               {errors.password?.type === 'minLength' && \"minimum length is 3\"}\r\n                               {errors.password?.type === 'maxLength' && \"maximum length is 10\"}\r\n                           </p>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"password\"\r\n                                {...register('password', { required: true, minLength:3, maxLength:10 })}\r\n                                placeholder=\"password \"\r\n                                type=\"password\"\r\n                               \r\n                            />\r\n                            <br />\r\n\r\n                            <div className=\"d-grid gap-2\">\r\n                                <button className=\"btn btn-primary mb-2\" >Log In </button>\r\n                            </div>\r\n                        </form>\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","\r\nimport React from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nfunction Signup() {\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n    const onSubmit = (data) =>{\r\n         console.log(data);\r\n         alert(\"registration success\")\r\n         window.location = '/login';\r\n    localStorage.setItem('user-data',JSON.stringify(data))\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            \r\n            <div className=\"col-sm-4 offset-sm-4 mt-5\">\r\n                <div className=\"card shadow\">\r\n                    <div className=\"container\">\r\n\r\n                        <h1  className=\"text-center text-primary\">SignUp</h1><br />\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <p className=\"text-danger\">\r\n                               {errors.username?.type === 'required' && \"name is required\"}\r\n                               {errors.username?.type === 'minLength' && \"minimum length is 3\"}\r\n                               {errors.username?.type === 'maxLength' && \"maximum length is 15\"}\r\n                               {errors.username?.type === 'pattern' && \"invailid name\"}\r\n                               \r\n                           </p>\r\n\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"username\"\r\n                                {...register('username', { required: true, minLength:4, maxLength:15, pattern: /^[A-Za-z ]+$/i })}\r\n                                placeholder=\"enter your name\"\r\n                                type=\"text\"\r\n                                \r\n                                \r\n                            />\r\n                            <br />\r\n                            \r\n                            <p className=\"text-danger\">\r\n                               {errors.number?.type === 'required' && \"number is required\"}\r\n                               {errors.number?.type === 'minLength' && \"number should be 10 digit\"}\r\n                               {errors.number?.type === 'maxLength' && \"number should be 10 digit\"}\r\n                           </p>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"number\"\r\n                                {...register('number', { required: true, minLength:10, maxLength:10 })}\r\n                                placeholder=\"enter you number\"\r\n                                type=\"number\"\r\n                               \r\n                            />\r\n                            <br />\r\n\r\n\r\n\r\n\r\n\r\n                        <p className=\"text-danger\">\r\n                               {errors.email?.type === 'required' && \"email is required\"}\r\n                               {errors.email?.type === 'pattern' && \"invalid email\"}\r\n                               \r\n                           </p>\r\n\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"email\"\r\n                                {...register('email', { required: true, pattern:/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+/, })}\r\n                                placeholder=\"enter email id \"\r\n                                type=\"text\"\r\n                                \r\n                                \r\n                            />\r\n                            <br />\r\n                            \r\n                            <p className=\"text-danger\">\r\n                               {errors.password?.type === 'required' && \"password is required\"}\r\n                               {errors.password?.type === 'minLength' && \"minimum length is 3\"}\r\n                               {errors.password?.type === 'maxLength' && \"maximum length is 10\"}\r\n                           </p>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"password\"\r\n                                {...register('password', { required: true, minLength:3, maxLength:10 })}\r\n                                placeholder=\"password \"\r\n                                type=\"password\"\r\n                               \r\n                            />\r\n                            <br />\r\n\r\n                            <div className=\"d-grid gap-2\">\r\n                                <button className=\"btn btn-primary mb-2\" >Log In </button>\r\n                            </div>\r\n                        </form>\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default  Signup","import React from 'react'\r\n\r\nfunction Home() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"main-heading mt-5\">This is Home page......</h1>\r\n            <p>please go to the signup page for registration.... </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from \"react\";\nimport {BrowserRouter as Router,Switch,Route,} from \"react-router-dom\";\nimport './App.css';\nimport Header from './Header';\nimport Login from './Login';\nimport Singup from './Singup';\nimport Home from \"./Home\";\nimport Loginvalid from \"./Loginvalid\"\nimport Registration from \"./Ragistration\";\n\n\nfunction App() {\n  return (\n   <>\n\n   \n   \n   <Router>\n   <Header/>\n   \n\n\n      <Switch>\n        <Route exact path='/' component={Home}/>\n        <Route exact path='/login' component={Login}/>\n        <Route exact path='/signup' component={Singup}/>        \n    \n       \n      </Switch>\n  \n    </Router>\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}